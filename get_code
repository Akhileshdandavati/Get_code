#!/bin/bash

# Use the current directory as the project directory
project_dir=$(pwd)

# Use a fixed name for the output file in the current directory
output_file="${project_dir}/code_context.txt"

echo "Project directory: $project_dir"
echo "Output file: $output_file"

# Check if the output file exists and remove it if it does
if [ -f "$output_file" ]; then
  echo "Removing existing output file..."
  rm "$output_file"
fi

# List of directories to look for
directories=("helloworld-simple-agent" "tests")

# List of file types to ignore
ignore_files=("*.ico" "*.png" "*.jpg" "*.jpeg" "*.gif" "*.svg")

# Recursive function to read files and append their content
read_files() {
  for entry in "$1"/*; do
    echo "Processing: $entry"
    if [ -d "$entry" ]; then
      echo "Directory found: $entry"
      # If entry is a directory, call this function recursively
      read_files "$entry"
    elif [ -f "$entry" ]; then
      echo "File found: $entry"
      # Check if the file type should be ignored
      should_ignore=false
      for ignore_pattern in "${ignore_files[@]}"; do
        if [[ "$entry" == $ignore_pattern ]]; then
          should_ignore=true
          break
        fi
      done

      # If the file type should not be ignored, append its relative path and content to the output file
      if ! $should_ignore; then
        relative_path=${entry#"$project_dir/"}
        echo "Appending content of: $relative_path"
        echo "File: $relative_path" >> "$output_file"
        cat "$entry" >> "$output_file"
        echo "" >> "$output_file"
      else
        echo "File ignored: $entry"
      fi
    fi
  done
}

# Call the recursive function for each specified directory in the project directory
for dir in "${directories[@]}"; do
  if [ -d "${project_dir}/${dir}" ]; then
    echo "Reading files in directory: ${project_dir}/${dir}"
    read_files "${project_dir}/${dir}"
  else
    echo "Directory not found: ${project_dir}/${dir}"
  fi
done
